[["index.html", "DLL 2021 R section syllabus 1 Into 1.1 How to use this site", " DLL 2021 R section syllabus darachm etc 2021-05-26 1 Into Yo. Expectations 1.1 How to use this site Well, clicky tappy tap "],["intro.html", "2 Day 1 - Introduction 2.1 Subsection 2.2 Day 1 thoughts 2.3 Another subsection", " 2 Day 1 - Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. 2.1 Subsection Tank doesn’t need R, they just stare 2.2 Day 1 thoughts Day 1: - Data literacy - including R data types (as maps to visualization and interpretation) - Identifying different types of data - Factors, numeric, character strings, logicals - Why it matters - Variable types - Mapping how to put data into a variable types ( numeric, character, factor ) - Variable structures - Know what a vector is - Know what dataframe is - How to identify and inspect - Logic and conditionals - Evaluating things as TRUE and FALSE - Operators like ==, !=, &gt;, &lt; - How to do “if” - Functions - Looking at documentation and using the help function - Using functions - Understanding arguments - Preliminary data investigation - Using functions on vectors and dataframe columns to calculate summary statistics - Picking the type of plot based on the available data or the research question - Use hist() to plot a histogram of some numeric vector - Use plot() to compare two vectors - use plot() to demonstrate that there’s a bunch of other named arguments (title), and that documentation can be extensive in ?plot 2.3 Another subsection Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! "],["meet-of-the-matter.html", "3 meet of the matter 3.1 3sub section 3.2 4sub section", " 3 meet of the matter There it is 3.1 3sub section Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 3.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 3.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa 3.2 4sub section You can write citations, too. For example, we are using the bookdown package [@R-bookdown] in this sample book, which was built on top of R Markdown and knitr [@xie2015]. "],["day-2-literature.html", "4 Day 2 Literature", " 4 Day 2 Literature Day 2: - Using ggplot2 - Install ggplot package - Understanding the general theory of ggplot ( data into aes into geoms ) - Different kinds of plot (geom_bar, geom_hist, geom_point) - Discrete vs. continuous plots - Trendlines (geom_smooth) - How to find new plot styles (ie demo searching for plots, show plot gallery websites) - Facets (maybe just for students who want challenge) - Data processing (getting started from a file) - Previewing data and looking for issues - Normalizing data - Dealing with NAs, Transforming Data Types, Scaling Values, Filtering Values - What is a tibble() - What is a pipe, piping functions together - Tidyverse for group_by and summarise - Statistical ideas for analyzing data - Fit a lm() regression model of two vectors, or two columns of dataframe, get a summary of these - Interpreting summary statistics - Uncertainty and significance - Error bars and confidence intervals - Visualizing and interpreting this "],["day-3.html", "5 Day 3", " 5 Day 3 Day 3: Automation, workflows, Loops and apply? Loops for automating workflow Enough use of loops How to use apply very basically, survival skills ( apply df,2,mean) or something ) Reading documentation - using ? Functions - Creating functions - arguments for new functions - Using packages - How to find and install CRAN - How to find and install Bioconductor - How to find and install stuff from git Sharing code - .R , .Rmd , git Testing code and troubleshooting Grand finale: Take a CSV dataset and turn it into an appropriate ggplot figure "]]
